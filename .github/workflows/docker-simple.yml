name: 发布Docker镜像

on:
  # 当推送版本标签时触发
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  
  # 允许手动触发
  workflow_dispatch:
    inputs:
      tag:
        description: '自定义镜像标签'
        required: false
        default: 'manual'
        type: string
      platforms:
        description: '构建平台'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: choice
        options:
        - 'linux/amd64,linux/arm64'
        - 'linux/amd64'
        - 'linux/arm64'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 登录GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 生成镜像标签和标签
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 手动触发时使用输入的标签
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '' }}
            # 手动触发默认标签
            type=raw,value=manual-{{sha}},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag == '' }}
            # 版本标签
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.title=评论系统后端
            org.opencontainers.image.description=为https://www.yhnotes.com静态博客提供评论功能的FastAPI后端服务
            org.opencontainers.image.vendor=YunHai
            org.opencontainers.image.url=https://www.yhnotes.com
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/blob/main/README.md
            org.opencontainers.image.licenses=MIT
      
      - name: 构建并推送Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
      
      - name: 输出镜像信息
        run: |
          echo "## 🐳 Docker镜像构建成功！" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**触发方式:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "**手动触发参数:**" >> $GITHUB_STEP_SUMMARY
            echo "- 自定义标签: ${{ github.event.inputs.tag }}" >> $GITHUB_STEP_SUMMARY
            echo "- 构建平台: ${{ github.event.inputs.platforms }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**镜像标签:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**使用方法:**" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "# 拉取镜像" >> $GITHUB_STEP_SUMMARY
          echo "docker pull 第一个标签" | head -1 >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# 运行容器" >> $GITHUB_STEP_SUMMARY
          echo "docker run -p 8000:8000 第一个标签" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY