version: '3.8'

services:
  # 评论系统API服务 (使用GitHub Packages镜像)
  comment_api:
    image: ghcr.io/yourusername/yun-comments:latest  # 替换为你的GitHub用户名
    container_name: comment-api-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://comment_user:${POSTGRES_PASSWORD}@postgres:5432/comment_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=["https://www.yhnotes.com", "https://yourdomain.com"]
      - DEBUG=false
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - comment-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: comment-postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=comment_db
      - POSTGRES_USER=comment_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U comment_user -d comment_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - comment-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: comment-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - comment-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: comment-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录
      - nginx_logs:/var/log/nginx
    depends_on:
      - comment_api
    networks:
      - comment-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  comment-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16